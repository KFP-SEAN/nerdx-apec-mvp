/**
 * Shopping Cart Page
 * Auto-generated by Phase A automation
 */

'use client';

import { useCart } from '@/context/CartContext';
import { useRouter } from 'next/navigation';
import Image from 'next/image';

export default function CartPage() {
  const router = useRouter();
  const { cart, removeFromCart, updateQuantity, clearCart } = useCart();

  const total = cart.reduce((sum, item) => sum + (parseFloat(item.product.price) * item.quantity), 0);

  async function handleCheckout() {
    // Implementation will use Shopify checkout
    alert('Checkout functionality coming soon!');
  }

  if (cart.length === 0) {
    return (
      <div className="container mx-auto px-4 py-16">
        <div className="text-center">
          <h1 className="text-3xl font-bold mb-4">장바구니가 비어있습니다</h1>
          <p className="text-gray-600 mb-8">쇼핑을 계속하시겠습니까?</p>
          <button
            onClick={() => router.push('/products/shopify')}
            className="px-8 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
          >
            쇼핑 계속하기
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <h1 className="text-3xl font-bold mb-8">장바구니</h1>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* Cart Items */}
        <div className="lg:col-span-2 space-y-4">
          {cart.map((item) => (
            <div
              key={item.variantId}
              className="bg-white rounded-lg shadow p-4 flex items-center space-x-4"
            >
              {/* Product Image */}
              <div className="relative h-24 w-24 bg-gray-100 rounded flex-shrink-0">
                {item.product.image ? (
                  <Image
                    src={item.product.image}
                    alt={item.product.title}
                    fill
                    className="object-cover rounded"
                  />
                ) : (
                  <div className="flex items-center justify-center h-full text-gray-400 text-xs">
                    No Image
                  </div>
                )}
              </div>

              {/* Product Info */}
              <div className="flex-1">
                <h3 className="font-semibold text-lg">{item.product.title}</h3>
                <p className="text-gray-600">${item.product.price}</p>
              </div>

              {/* Quantity Control */}
              <div className="flex items-center space-x-2">
                <button
                  onClick={() => updateQuantity(item.variantId, Math.max(1, item.quantity - 1))}
                  className="px-3 py-1 border border-gray-300 rounded hover:bg-gray-50"
                >
                  -
                </button>
                <span className="font-semibold w-8 text-center">{item.quantity}</span>
                <button
                  onClick={() => updateQuantity(item.variantId, item.quantity + 1)}
                  className="px-3 py-1 border border-gray-300 rounded hover:bg-gray-50"
                >
                  +
                </button>
              </div>

              {/* Subtotal */}
              <div className="text-right">
                <p className="font-semibold text-lg">
                  ${(parseFloat(item.product.price) * item.quantity).toFixed(2)}
                </p>
              </div>

              {/* Remove Button */}
              <button
                onClick={() => removeFromCart(item.variantId)}
                className="text-red-600 hover:text-red-800"
              >
                ✕
              </button>
            </div>
          ))}

          {/* Clear Cart */}
          <button
            onClick={clearCart}
            className="text-red-600 hover:text-red-800 text-sm"
          >
            장바구니 비우기
          </button>
        </div>

        {/* Order Summary */}
        <div className="lg:col-span-1">
          <div className="bg-white rounded-lg shadow p-6 sticky top-4">
            <h2 className="text-xl font-bold mb-4">주문 요약</h2>

            <div className="space-y-2 mb-4">
              <div className="flex justify-between">
                <span className="text-gray-600">소계</span>
                <span className="font-semibold">${total.toFixed(2)}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-gray-600">배송비</span>
                <span className="font-semibold">무료</span>
              </div>
              <div className="border-t pt-2 flex justify-between">
                <span className="text-lg font-bold">총계</span>
                <span className="text-lg font-bold text-blue-600">${total.toFixed(2)}</span>
              </div>
            </div>

            <button
              onClick={handleCheckout}
              className="w-full px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-semibold"
            >
              결제하기
            </button>

            <button
              onClick={() => router.push('/products/shopify')}
              className="w-full mt-2 px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50"
            >
              쇼핑 계속하기
            </button>
          </div>
        </div>
      </div>
    </div>
  );
}
