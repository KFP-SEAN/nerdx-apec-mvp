/**
 * Enhanced AR Viewer with WebXR
 * Auto-generated by Phase B
 */

'use client';

import { useState, useEffect, useRef } from 'react';
import { useSearchParams } from 'next/navigation';

export default function EnhancedARViewerPage() {
  const searchParams = useSearchParams();
  const product = searchParams.get('product');
  const modelViewerRef = useRef<any>(null);
  const [isARSupported, setIsARSupported] = useState(false);
  const [isLoading, setIsLoading] = useState(true);

  useEffect(() => {
    checkARSupport();
    loadModelViewer();
  }, []);

  async function checkARSupport() {
    if ('xr' in navigator) {
      const supported = await (navigator as any).xr.isSessionSupported('immersive-ar');
      setIsARSupported(supported);
    }
  }

  function loadModelViewer() {
    const script = document.createElement('script');
    script.type = 'module';
    script.src = 'https://ajax.googleapis.com/ajax/libs/model-viewer/3.3.0/model-viewer.min.js';
    script.onload = () => setIsLoading(false);
    document.head.appendChild(script);
  }

  function handleARActivated() {
    console.log('AR session started');
  }

  function handleModelLoad() {
    console.log('3D model loaded successfully');
    setIsLoading(false);
  }

  return (
    <div className="min-h-screen bg-black">
      {/* AR Viewer */}
      <div className="relative w-full h-screen">
        <model-viewer
          ref={modelViewerRef}
          src="https://modelviewer.dev/shared-assets/models/NeilArmstrong.glb"
          ar
          ar-modes="webxr scene-viewer quick-look"
          camera-controls
          touch-action="pan-y"
          auto-rotate
          shadow-intensity="1"
          environment-image="neutral"
          exposure="1"
          onLoad={handleModelLoad}
          onAr-activate={handleARActivated}
          style={{
            width: '100%',
            height: '100%'
          }}
        >
          {/* AR Button */}
          <button
            slot="ar-button"
            className="absolute bottom-8 left-1/2 transform -translate-x-1/2 px-8 py-4 bg-white text-black rounded-full font-bold text-lg shadow-lg hover:bg-gray-100"
          >
            {isARSupported ? '📱 AR로 보기' : '🥽 3D 뷰어'}
          </button>

          {/* Loading Indicator */}
          {isLoading && (
            <div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50">
              <div className="text-white text-xl">Loading 3D model...</div>
            </div>
          )}

          {/* Info Panel */}
          <div className="absolute top-4 left-4 right-4 bg-white bg-opacity-90 rounded-lg p-4">
            <h1 className="text-2xl font-bold mb-2">{product || 'AR Preview'}</h1>
            <p className="text-gray-600">
              {isARSupported
                ? 'AR이 지원됩니다. "AR로 보기" 버튼을 눌러 실제 공간에서 확인하세요.'
                : '이 기기는 AR을 지원하지 않습니다. 3D 모델을 확인하세요.'}
            </p>
          </div>

          {/* Controls Help */}
          <div className="absolute bottom-24 left-4 right-4 bg-black bg-opacity-70 rounded-lg p-4 text-white text-sm">
            <p>💡 사용법:</p>
            <ul className="list-disc list-inside mt-2 space-y-1">
              <li>드래그: 회전</li>
              <li>핀치: 확대/축소</li>
              <li>두 손가락 드래그: 이동</li>
            </ul>
          </div>
        </model-viewer>
      </div>
    </div>
  );
}
